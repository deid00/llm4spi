{"task_id": "0", "program": "def maxp(x: float, y: float) -> float: \n\"\"\" \nThe program takes x and y that are non-negative, and it returns the greatest of x and y. \n \n>>> maxp(0,0) \n0 \n>>> maxp(9,1) \n1 \n>>> maxp(9,10) \n10 \n\"\"\" \nreturn max(x,y)", "pre_condition": "x and y are non-negative.", "pre_condition_prompt": "def checkPre(x: float, y: float) -> bool:\n    \"\"\"\n    Return true if x and y are non-negative.\n    \"\"\"", "pre_condition_solution": "return x>=0 and y>=0", "post_condition": "The program returns the greatest of x and y.", "post_condition_prompt": "def checkPost(retval: float, x: float, y: float) -> bool:\n    \"\"\"\n    Return true if retval is the greatest of x and y.\n    \"\"\"\n", "post_condition_solution": "return (retval==x || retval==y) && retval >=x && retval >= y" }
{"task_id": "1", "program": "def minp(x: int, y: int) -> int:\n    \"\"\"\n    The program takes x and y, and returns the smallest of x and y.\n\n    >>> min(0,0)\n    0\n    >>> min(9,1)\n    1\n    >>> min(9,10)\n    9 \n    \"\"\"\n    return min(x,y)", "pre_condition": "", "pre_condition_prompt": "def checkPre(x: int, y: int) -> bool:\n    \"\"\"\n    Return true.\n    \"\"\"", "pre_condition_solution": "return true", "post_condition": "The program returns the smallest of x and y.", "post_condition_prompt": "def checkPost(retval: int, x: int, y: int) -> bool:\n    \"\"\"\n    Return true if retval is the smallest of x and y.\n    \"\"\"\n", "post_condition_solution": "return (retval==x || retval==y) && retval <=x && retval <= y" }
{"task_id": "2", "program": "def getMin(a: List[int]) -> int:\n    \"\"\"\n    The program takes a non-null and non-empty integer list a, and returns the smallest element of list a.\n    \n    >>> getMin([1,2,3,4])\n    1\n    >>> getMin([5,5,5])\n    5\n    >>> getMin([5,4])\n    4\n    \"\"\"\n    return min(a)", "pre_condition": "a is non-null and non-empty", "pre_condition_prompt": "def checkPre(a: List[int]) -> bool:\n    \"\"\"\n    Return true if a is non-null and non-empty\n    \"\"\"", "pre_condition_solution": "return a != null && len(a) > 0", "post_condition": "The program returns the smallest element of a.", "post_condition_prompt": "def checkPost(retval: int, a: List[int]) -> bool:\n    \"\"\"\n    Return true if retval is the smallest element of a.\n    \"\"\"\n", "post_condition_solution": "return (retval in a) && all(retval <= i for i in a)" }